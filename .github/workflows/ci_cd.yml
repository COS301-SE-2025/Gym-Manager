name: Gym Manager CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  setup:
    name: Setup Node
    runs-on: ubuntu-latest
    outputs:
      node_cache_key: ${{ steps.node_cache_key.outputs.cache-hit }}
    steps:
      - uses: actions/checkout@v4

      # Node.js setup
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache node_modules
        id: node_cache_key
        uses: actions/cache@v4
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

      - name: Install NPM dependencies for api
        run: npm install
        working-directory: ./services/api

      - name: Install NPM dependencies for mobile interface
        run: npm install
        working-directory: ./apps/mobile

      - name: Install NPM dependencies for web interface
        run: npm install
        working-directory: ./apps/web

  lint:
    name: Lint API + UI
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install API dependencies
        run: npm install
        working-directory: ./services/api
      
      - name: Lint API
        run: npm run lint
        working-directory: ./services/api

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: setup
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: gym_manager_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    env:
      NODE_ENV: test
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/gym_manager_test
      JWT_SECRET: test-secret-key
      PG_USER: postgres
      PG_PASSWORD: postgres
      PG_HOST: localhost
      PG_PORT: 5432
      PG_DATABASE: gym_manager_test
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install API test deps
        run: npm install
        working-directory: ./services/api

      - name: Setup test database
        run: |
          npm run db:generate
          npm run db:push
          npm run test:db:setup
        working-directory: ./services/api
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/gym_manager_test

      - name: Run Stable Tests (CI/CD)
        run: npm run test:ci-stable
        working-directory: ./services/api

      - name: Run Coverage Report
        run: npm run test:coverage
        working-directory: ./services/api

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [lint, test]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4

      - name: Deploy API to production
        run: echo "TODO"

      - name: Deploy UI to production
        run: echo "TODO"
