name: Gym Manager CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint:
    name: Lint API
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: services/api/package-lock.json

      - name: Install API deps
        run: npm ci
        working-directory: ./services/api

      - name: Lint API
        run: npm run lint
        working-directory: ./services/api

  unit-tests:
    name: Run Unit Tests (API)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: services/api/package-lock.json

      - name: Install API deps
        run: npm ci
        working-directory: ./services/api

      - name: Run API Unit Tests
        run: npm run test:unit
        working-directory: ./services/api
        env:
          JWT_SECRET: ci-unit-secret

  test-availability:
    name: Integration — Availability (/healthz)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: services/api/package-lock.json

      - name: Install API deps
        run: npm ci
        working-directory: ./services/api

      - name: Run synthetic availability probe
        run: npm run test:integration:availability
        working-directory: ./services/api
        env:
          AVAIL_N: 60
          AVAIL_GAP_MS: 50
          AVAIL_MAX_P95_MS: 300
          AVAIL_MAX_ERR_RATE: 0
          JWT_SECRET: ci-integration-secret

  test-security:
    name: Integration — Security (JWT/Helmet/CORS)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: services/api/package-lock.json

      - name: Install API deps
        run: npm ci
        working-directory: ./services/api

      - name: Run security integration tests
        run: npm run test:integration:security
        working-directory: ./services/api
        env:
          JWT_SECRET: ci-integration-secret

  test-performance:
    name: Integration — Performance (JMeter)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: services/api/package-lock.json

      - name: Install API deps
        run: npm ci
        working-directory: ./services/api

      # Start the API from TypeScript (no build step) and wait for /healthz
      - name: Start API (ts-node) and wait for /healthz
        working-directory: ./services/api
        env:
          PORT: 3000
          NODE_ENV: test
          JWT_SECRET: ci-integration-secret
        run: |
          npx ts-node -e "const m=require('./src/index'); const app=m.app||m.default; const port=process.env.PORT||3000; if(!app?.listen){console.error('No exported app'); process.exit(1)}; app.listen(port,()=>console.log('API up on '+port));" &
          for i in {1..40}; do
            curl -fsS "http://localhost:3000/healthz" >/dev/null && break
            sleep 1
          done
          curl -fsS "http://localhost:3000/healthz" >/dev/null || (echo 'API failed to start' && exit 1)

      - name: Verify JMeter plan exists
        working-directory: ./services/api
        run: test -f tests/perf/healthz.jmx || (echo "Missing tests/perf/healthz.jmx" && exit 1)

      - name: Install JMeter
        run: |
          sudo apt-get update && sudo apt-get install -y wget unzip
          JM_VERSION=5.6.3
          wget -q https://dlcdn.apache.org/jmeter/binaries/apache-jmeter-$JM_VERSION.zip
          unzip -q apache-jmeter-$JM_VERSION.zip
          echo "$GITHUB_WORKSPACE/apache-jmeter-$JM_VERSION/bin" >> $GITHUB_PATH

      - name: Run JMeter plan against local API
        working-directory: ./services/api
        env:
          HOST: localhost
          PROTO: http
          PORT: 3000
          users: 10
          ramp: 10
          duration: 30
          MAX_MS: 300
        run: |
          jmeter -n \
            -t tests/perf/healthz.jmx \
            -l tests/perf/results.jtl \
            -JHOST="$HOST" -JPROTO="$PROTO" -JPORT="$PORT" \
            -Jusers="$users" -Jramp="$ramp" -Jduration="$duration" -JMAX_MS="$MAX_MS"

      - name: Upload JMeter results
        uses: actions/upload-artifact@v4
        with:
          name: jmeter-results
          path: services/api/tests/perf/results.jtl




  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [lint, unit-tests, test-availability, test-security, test-performance]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4
      - name: Deploy API to production
        run: echo "TODO"
      - name: Deploy UI to production
        run: echo "TODO"
