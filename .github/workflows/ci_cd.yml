name: Gym Manager CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint:
    name: Lint API
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./services/api
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: services/api/package-lock.json

      - name: Install deps
        run: npm ci

      - name: Lint API
        run: npm run lint

  test-unit:
    name: Unit Tests (API)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./services/api
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: services/api/package-lock.json

      - name: Install deps
        run: npm ci

      - name: Run unit tests
        run: npm run test:unit

  test-availability:
    name: Integration (Availability)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./services/api
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: services/api/package-lock.json

      - name: Install deps
        run: npm ci

      - name: Probe /healthz for availability (p95 + failure rate)
        env:
          # Path the test will probe (keep this shallow so it doesn't need a DB)
          AVAIL_PATH: /healthz
          # Number of requests and pacing (total duration â‰ˆ N * GAP_MS)
          AVAIL_N: "60"
          AVAIL_GAP_MS: "50"
          # Gates: fail the job if p95 > 300ms or any non-200s occur
          AVAIL_MAX_P95_MS: "300"
          AVAIL_MAX_ERR_RATE: "0"
        run: npm run test:integration:availability

      - name: Upload availability metrics
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: availability-metrics
          path: services/api/tmp/availability-metrics.json

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [lint, test-unit, test-availability]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4

      - name: Deploy API to production
        run: echo "TODO"

      - name: Deploy UI to production
        run: echo "TODO"
